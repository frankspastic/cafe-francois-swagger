swagger: '2.0'
info:
  description: ''
  version: 1.0.0
  title: Cafe Francois
  contact:
    email: maulit@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: cafefrancois-api.frankmaulit.com
basePath: /
tags:
  - name: order
    description: CRUD Orders
  - name: item
    description: Access to Items
schemes:
  - http
paths:
  /order:
    post:
      tags:
        - order
      summary: Create an order
      description: ''
      operationId: createORder
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Order object that needs to be added to the list
          required: true
          schema:
            $ref: '#/definitions/Order'
      responses:
        '405':
          description: Invalid input
    put:
      tags:
        - order
      summary: Update an existing order
      description: ''
      operationId: updateOrder
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Order object that needs to be added to the list
          required: true
          schema:
            $ref: '#/definitions/Order'
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
        '405':
          description: Validation exception
  /order/findByStatus:
    get:
      tags:
        - order
      summary: Finds Orders by status
      description: Multiple status values can be provided with comma separated strings
      operationId: findOrdersByStatus
      produces:
        - application/json
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: true
          type: array
          items:
            type: string
            enum:
              - queued
              - served
              - cancelled
            default: available
          collectionFormat: multi
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Order'
        '400':
          description: Invalid status value
  '/order/{orderId}':
    get:
      tags:
        - order
      summary: Find order by ID
      description: Returns a single order
      operationId: getOrderById
      produces:
        - application/json
      parameters:
        - name: orderId
          in: path
          description: ID of order to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Order'
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
    put:
      tags:
        - order
      summary: Updates an order in the store with form data
      description: ''
      operationId: updateOrderWithForm
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: orderId
          in: path
          description: ID of order that needs to be updated
          required: true
          type: integer
          format: int64
        - name: itemId
          type: integer
          format: int64
          in: formData
          description: ID of item being ordered.
        - name: customerName
          in: formData
          description: Updated name of the customer
          required: false
          type: string
        - name: quantity
          in: formData
          type: integer
          format: int32
          description: Quantity of Items
        - name: status
          in: formData
          description: Updated status of the order
          required: false
          type: string
      responses:
        '405':
          description: Invalid input
    delete:
      tags:
        - order
      summary: Deletes an Order
      description: ''
      operationId: deleteOrder
      produces:
        - application/json
      parameters:
        - name: orderId
          in: path
          description: Order id to delete
          required: true
          type: integer
          format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
  /item:
    post:
      tags:
        - item
      summary: Create an item
      description: ''
      operationId: createItem
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Item object that needs to be added to the list
          required: true
          schema:
            $ref: '#/definitions/Item'
      responses:
        '405':
          description: Invalid input
    put:
      tags:
        - item
      summary: Update an existing item
      description: ''
      operationId: updateItem
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Item object that needs to be added to the list
          required: true
          schema:
            $ref: '#/definitions/Item'
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Item not found
        '405':
          description: Validation exception  
  '/item/{itemId}':
    get:
      tags:
        - item
      summary: Find item by ID
      description: Returns a single item
      operationId: getItemById
      produces:
        - application/json
      parameters:
        - name: itemId
          in: path
          description: ID of item to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Item'
        '400':
          description: Invalid ID supplied
        '404':
          description: Item not found
    put:
      tags:
        - item
      summary: Updates an item in the store with form data
      description: ''
      operationId: updateItemWithForm
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: itemId
          in: path
          description: ID of item that needs to be updated
          required: true
          type: integer
          format: int64
        - name: name
          in: formData
          description: Updated name of the customer
          required: true
          type: string
        - name: description
          in: formData
          description: Updated description of the customer
          required: false
          type: string
      responses:
        '405':
          description: Invalid input
    delete:
      tags:
        - item
      summary: Deletes an Item
      description: ''
      operationId: deleteItem
      produces:
        - application/json
      parameters:
        - name: itemId
          in: path
          description: Item id to delete
          required: true
          type: integer
          format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Item not found
definitions:
  Order:
    type: object
    properties:
      id:
        type: integer
        format: int64
      items:
        type: array
        format: int64
        items : {
          $ref : '#/definitions/OrderItem'
        }
      customerName:
        type: string
      quantity:
        type: integer
        format: int32
      orderDate:
        type: string
        format: date-time
      status:
        type: string
        description: Order Status
        enum:
          - queued
          - served
          - cancelled
      complete:
        type: boolean
        default: false
    xml:
      name: Order
  OrderItem:
    type: object
    properties:
      orderId:
        type: integer
        format: int64
      itemId:
        type: integer
        format: int64
    xml:
      name: OrderItem
  Item:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      description:
        type: string
    xml:
      name: Item
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
